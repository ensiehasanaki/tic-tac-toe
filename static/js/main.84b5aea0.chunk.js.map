{"version":3,"sources":["tic-tac-toe.js","App.js","reportWebVitals.js","index.js"],"names":["TicTakToe","useState","playerNumber","setPlayerNumber","state","setState","map","row","i","value","j","type","onClick","col","pNum","oldState","newState","iing","jing","change","prev","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAsDeA,MAlDf,WACI,MAAwCC,mBAAS,KAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0BF,mBAAS,CAC/B,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAHX,mBAAOG,EAAP,KAAcC,EAAd,KAkBA,OACI,qCACI,kDAAqBH,KACrB,gCACI,gCACKE,EAAME,KAAI,SAACC,EAAKC,GAAN,OACP,6BACKD,EAAID,KAAI,SAACG,EAAOC,GAAR,OACL,6BACI,wBACIC,KAAK,SACLC,QAAS,YAxB9B,SAACL,EAAaM,EAAaC,GACtCT,GAAS,SAACU,GACN,IACMC,EAAWD,EAAST,KAAI,SAACW,GAAD,OAAUA,EAAKX,KAAI,SAACY,GAAD,OAAUA,QAC3D,OAA2B,IAAvBH,EAASR,GAAKM,IAAqC,IAAvBE,EAASR,GAAKM,IAFzBV,EAAgBW,GAI1BE,IAGXA,EAAST,GAAKM,GAAOC,EACdE,MAeyBG,CAAOX,EAAGE,EAAGR,GACbC,GAAgB,SAACiB,GAAD,OACH,IAATA,EAAa,EAAI,MAL7B,SASKX,KAVT,UAAYD,GAAZ,OAAgBE,QAFxB,UAAYF,EAAZ,iBCxBTa,MAJf,WACI,OAAO,cAAC,EAAD,KCSIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.84b5aea0.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\n// کد یه مشکلی داره که یهو اگه دلش بخاد وقتی چندبار رویه خونه میزنی عددشو عوض میکنه وقتی تمام خونه ها پر میشن\nimport { useState } from \"react\";\n\nfunction TicTakToe() {\n    const [playerNumber, setPlayerNumber] = useState(\"1\");\n    const [state, setState] = useState([\n        [0, 0, 0],\n        [0, 0, 0],\n        [0, 0, 0],\n    ]);\n    const change = (row: number, col: number, pNum: number) => {\n        setState((oldState) => {\n            const player = () => setPlayerNumber(pNum);\n            const newState = oldState.map((iing) => iing.map((jing) => jing));\n            if (oldState[row][col] === 1 || oldState[row][col] === 2) {\n                player();\n                return newState;\n            }\n\n            newState[row][col] = pNum;\n            return newState;\n        });\n    };\n    return (\n        <>\n            <div>player number: {playerNumber}</div>\n            <table>\n                <tbody>\n                    {state.map((row, i) => (\n                        <tr key={`${i}i`}>\n                            {row.map((value, j) => (\n                                <td key={`${i}${j}`}>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => {\n                                            change(i, j, playerNumber);\n                                            setPlayerNumber((prev) =>\n                                                prev === 2 ? 1 : 2\n                                            );\n                                        }}\n                                    >\n                                        {value}\n                                    </button>\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </>\n    );\n}\n\nexport default TicTakToe;\n","import TicTakToe from \"./tic-tac-toe\";\n\nfunction App() {\n    return <TicTakToe />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}